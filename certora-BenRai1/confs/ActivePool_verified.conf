{
    "files": [
        "certora-BenRai1/harness/ActivePoolHarness.sol",
        "packages/contracts/contracts/Dependencies/RolesAuthority.sol",
        "packages/contracts/contracts/CdpManager.sol",
        "packages/contracts/contracts/BorrowerOperations.sol",
        "certora-BenRai1/harness/CollateralTokenTester.sol",
        "packages/contracts/contracts/CollSurplusPool.sol",
        "certora-BenRai1/harness/DummyERC20A.sol",
        "certora-BenRai1/harness/DummyERC20B.sol",
        "packages/contracts/contracts/PriceFeed.sol",
        "certora-BenRai1/harness/MockAggregatorA.sol",
        "certora-BenRai1/harness/MockAggregatorB.sol",
        "packages/contracts/contracts/TestContracts/MockFallbackCaller.sol",
        "certora-BenRai1/harness/MockFlashBorrower.sol",
        "packages/contracts/contracts/EBTCToken.sol"
    ],
    "link": [
        "ActivePoolHarness:_authority=RolesAuthority",
        "ActivePoolHarness:cdpManagerAddress=CdpManager",
        "ActivePoolHarness:collateral=CollateralTokenTester",
        "ActivePoolHarness:borrowerOperationsAddress=BorrowerOperations",
        "ActivePoolHarness:collSurplusPoolAddress=CollSurplusPool",
        "CdpManager:priceFeed=PriceFeed",
        "CdpManager:activePool=ActivePoolHarness",
        "CdpManager:collateral=CollateralTokenTester",
        "PriceFeed:ETH_BTC_CL_FEED=MockAggregatorA",
        "PriceFeed:STETH_ETH_CL_FEED=MockAggregatorB",
        "PriceFeed:fallbackCaller=MockFallbackCaller",
        "MockFlashBorrower:EBTC_Token=EBTCToken",
        "EBTCToken:_authority=RolesAuthority",
        "CollSurplusPool:activePoolAddress=ActivePoolHarness"
    ],
    "verify": "ActivePoolHarness:certora-BenRai1/specs/ActivePool.spec",
    "loop_iter": "3",
    "optimistic_loop": true,
    "send_only": true,
    "rule_sanity": "basic",
    "msg": "ActivePool all",
}